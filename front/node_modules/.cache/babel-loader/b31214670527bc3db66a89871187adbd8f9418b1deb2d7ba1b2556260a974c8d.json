{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initiatlState = {\n  tasks: []\n};\nexport const TestCreationSlice = createSlice({\n  initialState: initiatlState,\n  name: 'testCreation',\n  reducers: {\n    addRandomQuestion(state) {\n      state.tasks.push({\n        id: Math.random().toString(36).substr(2, 9),\n        type: 'checkbox',\n        question: 'Что НЕ относится к персональным данным ?   ' + Math.random().toString(36).substr(2, 9),\n        answers: [{\n          text: 'Фамилия, имя, отчество',\n          isCorrect: false\n        }, {\n          text: 'Все наши документы',\n          isCorrect: false\n        }, {\n          text: 'Банковские данные',\n          isCorrect: false\n        }, {\n          text: 'Картинка природы из Интернета',\n          isCorrect: true\n        }],\n        isPersonal: false\n      });\n    },\n    deleteTaskFromList: (state, action) => {\n      const index = state.tasks.findIndex(task => task.id === action.payload);\n      if (index !== -1) {\n        state.tasks.splice(index, 1);\n      }\n    }\n  }\n});","map":{"version":3,"names":["createSlice","initiatlState","tasks","TestCreationSlice","initialState","name","reducers","addRandomQuestion","state","push","id","Math","random","toString","substr","type","question","answers","text","isCorrect","isPersonal","deleteTaskFromList","action","index","findIndex","task","payload","splice"],"sources":["/home/msheverdin/diplom2/front/src/redux/TestCreation/TestCreationSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initiatlState = {\n    tasks: []\n\n}\n\n\nexport const TestCreationSlice = createSlice({\n    initialState: initiatlState,\n        name: 'testCreation',\n        reducers: {\n            addRandomQuestion(state){\n                state.tasks.push({\n                    id: Math.random().toString(36).substr(2, 9),\n                    type: 'checkbox',\n                    question: 'Что НЕ относится к персональным данным ?   ' + Math.random().toString(36).substr(2, 9),\n                    answers: [\n                        {\n                            text: 'Фамилия, имя, отчество',\n                            isCorrect: false\n                        },\n                        {\n                            text: 'Все наши документы',\n                            isCorrect: false\n                        },\n                        {\n                            text: 'Банковские данные',\n                            isCorrect: false\n                        },\n                        {\n                            text: 'Картинка природы из Интернета',\n                            isCorrect: true\n                        },\n                    ],\n                    isPersonal: false\n                },)\n            },\n            deleteTaskFromList: (state, action) => {\n                const index = state.tasks.findIndex(task => task.id === action.payload);\n                if (index !== -1) {\n                  state.tasks.splice(index, 1);\n                }\n              }\n        }\n})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,aAAa,GAAG;EAClBC,KAAK,EAAE;AAEX,CAAC;AAGD,OAAO,MAAMC,iBAAiB,GAAGH,WAAW,CAAC;EACzCI,YAAY,EAAEH,aAAa;EACvBI,IAAI,EAAE,cAAc;EACpBC,QAAQ,EAAE;IACNC,iBAAiB,CAACC,KAAK,EAAC;MACpBA,KAAK,CAACN,KAAK,CAACO,IAAI,CAAC;QACbC,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3CC,IAAI,EAAE,UAAU;QAChBC,QAAQ,EAAE,6CAA6C,GAAGL,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;QACjGG,OAAO,EAAE,CACL;UACIC,IAAI,EAAE,wBAAwB;UAC9BC,SAAS,EAAE;QACf,CAAC,EACD;UACID,IAAI,EAAE,oBAAoB;UAC1BC,SAAS,EAAE;QACf,CAAC,EACD;UACID,IAAI,EAAE,mBAAmB;UACzBC,SAAS,EAAE;QACf,CAAC,EACD;UACID,IAAI,EAAE,+BAA+B;UACrCC,SAAS,EAAE;QACf,CAAC,CACJ;QACDC,UAAU,EAAE;MAChB,CAAC,CAAE;IACP,CAAC;IACDC,kBAAkB,EAAE,CAACb,KAAK,EAAEc,MAAM,KAAK;MACnC,MAAMC,KAAK,GAAGf,KAAK,CAACN,KAAK,CAACsB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACf,EAAE,KAAKY,MAAM,CAACI,OAAO,CAAC;MACvE,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBf,KAAK,CAACN,KAAK,CAACyB,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;MAC9B;IACF;EACN;AACR,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}