{"ast":null,"code":"var _jsxFileName = \"/home/msheverdin/diplom2/front/src/modules/ChoseQuestionTypePopup/ChoseQuestionTypePopup.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { ClassNames } from 'helpers/ClassNames/ClassNames';\nimport cls from './ChoseQuestionTypePopup.module.css';\nimport { PopupWrapper } from 'components/PopupWrapper/PopupWrapper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PopupNames, PopupsSlice } from 'redux/Popups/PopupsSlice';\nimport { Button } from 'UI/Button/Button';\nimport { Cross } from 'UI/Cross/Cross';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChoseQuestionTypePopup = props => {\n  _s();\n  const {\n    className\n  } = props;\n  const {\n    popups\n  } = useSelector(state => state.popups);\n  const dispatch = useDispatch();\n  const popupName = PopupNames.CHOSE_QUESTION_TYPE;\n  function AddRandomQuestionHandler() {\n    console.log('123');\n    // dispatch(TestCreationSlice.actions.addRandomQuestion())\n    // dispatch(PopupsSlice.actions.closePopup(popupName))\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWrapper, {\n    hidden: popups.find(popup => popup.name === popupName).hidden,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ClassNames(cls.choseQuestionTypePopup, {}, [className]),\n      children: [/*#__PURE__*/_jsxDEV(Cross, {\n        size: 23,\n        style: {\n          top: '30px',\n          right: '30px'\n        },\n        onClick: () => dispatch(PopupsSlice.actions.closePopup(popupName))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        onClick: () => AddRandomQuestionHandler,\n        className: cls.title,\n        children: \"\\u041A\\u0430\\u043A\\u043E\\u0439 \\u0442\\u0438\\u043F \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430 \\u0432\\u044B \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: cls.button,\n        onClick: () => AddRandomQuestionHandler,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: cls.button,\n        onClick: () => AddRandomQuestionHandler,\n        children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441 \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: cls.button,\n        onClick: () => AddRandomQuestionHandler,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0441\\u0432\\u043E\\u0439 \\u0441\\u043E\\u0431\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(ChoseQuestionTypePopup, \"2E0i39OUzTYlzgzNw7aAi1jfS4U=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ChoseQuestionTypePopup;\nvar _c;\n$RefreshReg$(_c, \"ChoseQuestionTypePopup\");","map":{"version":3,"names":["React","ClassNames","cls","PopupWrapper","useDispatch","useSelector","PopupNames","PopupsSlice","Button","Cross","ChoseQuestionTypePopup","props","className","popups","state","dispatch","popupName","CHOSE_QUESTION_TYPE","AddRandomQuestionHandler","console","log","find","popup","name","hidden","choseQuestionTypePopup","top","right","actions","closePopup","title","button"],"sources":["/home/msheverdin/diplom2/front/src/modules/ChoseQuestionTypePopup/ChoseQuestionTypePopup.jsx"],"sourcesContent":["import React from 'react';\nimport { ClassNames } from 'helpers/ClassNames/ClassNames';\nimport cls from './ChoseQuestionTypePopup.module.css';\nimport { PopupWrapper } from 'components/PopupWrapper/PopupWrapper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PopupNames, PopupsSlice } from 'redux/Popups/PopupsSlice';\nimport { Button } from 'UI/Button/Button';\nimport { Cross } from 'UI/Cross/Cross';\n\nexport const ChoseQuestionTypePopup = (props) => {\n    const { className } = props;\n\n    const { popups } = useSelector(state=>state.popups)\n    const dispatch = useDispatch()\n\n    const popupName = PopupNames.CHOSE_QUESTION_TYPE\n\n    function AddRandomQuestionHandler() {\n        console.log('123')\n        // dispatch(TestCreationSlice.actions.addRandomQuestion())\n        // dispatch(PopupsSlice.actions.closePopup(popupName))\n    }\n\n    return (\n        <PopupWrapper hidden={popups.find(popup => popup.name === popupName ).hidden}>\n            <div className={ClassNames(cls.choseQuestionTypePopup, {}, [className])}>\n                <Cross size={23} style={{top: '30px', right: '30px'}} onClick={()=>dispatch(PopupsSlice.actions.closePopup(popupName))} />\n                <h2 onClick={()=>AddRandomQuestionHandler} className={cls.title}>Какой тип вопроса вы хотите добавить?</h2>\n                <Button className={cls.button} onClick={()=>AddRandomQuestionHandler} >Добавить случайный вопрос</Button>\n                <Button className={cls.button} onClick={()=>AddRandomQuestionHandler} >Выбрать вопрос из списка</Button>\n                <Button className={cls.button} onClick={()=>AddRandomQuestionHandler} >Создать свой собственный вопрос</Button>\n            </div>\n        </PopupWrapper>\n );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,+BAA+B;AAC1D,OAAOC,GAAG,MAAM,qCAAqC;AACrD,SAASC,YAAY,QAAQ,sCAAsC;AACnE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,WAAW,QAAQ,0BAA0B;AAClE,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,KAAK,QAAQ,gBAAgB;AAAC;AAEvC,OAAO,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;EAAA;EAC7C,MAAM;IAAEC;EAAU,CAAC,GAAGD,KAAK;EAE3B,MAAM;IAAEE;EAAO,CAAC,GAAGR,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACD,MAAM,CAAC;EACnD,MAAME,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAMY,SAAS,GAAGV,UAAU,CAACW,mBAAmB;EAEhD,SAASC,wBAAwB,GAAG;IAChCC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB;IACA;EACJ;;EAEA,oBACI,QAAC,YAAY;IAAC,MAAM,EAAEP,MAAM,CAACQ,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAKP,SAAS,CAAE,CAACQ,MAAO;IAAA,uBACzE;MAAK,SAAS,EAAEvB,UAAU,CAACC,GAAG,CAACuB,sBAAsB,EAAE,CAAC,CAAC,EAAE,CAACb,SAAS,CAAC,CAAE;MAAA,wBACpE,QAAC,KAAK;QAAC,IAAI,EAAE,EAAG;QAAC,KAAK,EAAE;UAACc,GAAG,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAC,OAAO,EAAE,MAAIZ,QAAQ,CAACR,WAAW,CAACqB,OAAO,CAACC,UAAU,CAACb,SAAS,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1H;QAAI,OAAO,EAAE,MAAIE,wBAAyB;QAAC,SAAS,EAAEhB,GAAG,CAAC4B,KAAM;QAAA,UAAC;MAAqC;QAAA;QAAA;QAAA;MAAA,QAAK,eAC3G,QAAC,MAAM;QAAC,SAAS,EAAE5B,GAAG,CAAC6B,MAAO;QAAC,OAAO,EAAE,MAAIb,wBAAyB;QAAA,UAAE;MAAyB;QAAA;QAAA;QAAA;MAAA,QAAS,eACzG,QAAC,MAAM;QAAC,SAAS,EAAEhB,GAAG,CAAC6B,MAAO;QAAC,OAAO,EAAE,MAAIb,wBAAyB;QAAA,UAAE;MAAwB;QAAA;QAAA;QAAA;MAAA,QAAS,eACxG,QAAC,MAAM;QAAC,SAAS,EAAEhB,GAAG,CAAC6B,MAAO;QAAC,OAAO,EAAE,MAAIb,wBAAyB;QAAA,UAAE;MAA+B;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAC7G;IAAA;IAAA;IAAA;EAAA,QACK;AAEvB,CAAC;AAAA,GAzBYR,sBAAsB;EAAA,QAGZL,WAAW,EACbD,WAAW;AAAA;AAAA,KAJnBM,sBAAsB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}