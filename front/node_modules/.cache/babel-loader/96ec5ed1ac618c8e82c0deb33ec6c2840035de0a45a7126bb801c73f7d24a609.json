{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport { TestingSlice } from \"redux/Testing/TestingSlice\";\nimport { TestsSlice } from \"redux/Tests/TestsSlice\";\nimport { UserSlice } from \"redux/User/UserSlice\";\nimport { PopupsSlice } from \"redux/Popups/PopupsSlice\";\nimport { TestResultSlice } from \"redux/TestResult/TestResultSlice\";\nimport { StudentTestsSlice } from \"redux/StudentTests/StudentTestsSlice\";\nconst TestsReducer = TestsSlice.reducer;\nconst TestingReducer = TestingSlice.reducer;\nconst UserReducer = UserSlice.reducer;\nconst PopupsReducer = PopupsSlice.reducer;\nconst TestResultReducer = TestResultSlice.reducer;\nconst StudentTestsReducer = StudentTestsSlice.reducer;\nconst rootReducer = combineReducers({\n  tests: TestsReducer,\n  testing: TestingReducer,\n  user: UserReducer,\n  popups: PopupsReducer,\n  testResult: TestResultReducer,\n  studentTests: StudentTestsReducer\n});\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","storage","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","TestingSlice","TestsSlice","UserSlice","PopupsSlice","TestResultSlice","StudentTestsSlice","TestsReducer","reducer","TestingReducer","UserReducer","PopupsReducer","TestResultReducer","StudentTestsReducer","rootReducer","tests","testing","user","popups","testResult","studentTests","persistConfig","key","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/home/msheverdin/diplom2/front/src/store/index.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport storage from 'redux-persist/lib/storage';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n  } from 'redux-persist';\nimport { TestingSlice } from \"redux/Testing/TestingSlice\";\nimport { TestsSlice  } from \"redux/Tests/TestsSlice\";     \nimport { UserSlice } from \"redux/User/UserSlice\";\nimport { PopupsSlice } from \"redux/Popups/PopupsSlice\";\nimport { TestResultSlice } from \"redux/TestResult/TestResultSlice\";\nimport { StudentTestsSlice } from \"redux/StudentTests/StudentTestsSlice\";\n\n\n\nconst TestsReducer = TestsSlice.reducer\nconst TestingReducer = TestingSlice.reducer\nconst UserReducer = UserSlice.reducer\nconst PopupsReducer = PopupsSlice.reducer\nconst TestResultReducer = TestResultSlice.reducer\nconst StudentTestsReducer = StudentTestsSlice.reducer\n \n\nconst rootReducer = combineReducers({\n    tests: TestsReducer,\n    testing: TestingReducer,\n    user: UserReducer,\n    popups: PopupsReducer,\n    testResult: TestResultReducer,\n    studentTests: StudentTestsReducer\n})\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  })\n\nexport const persistor = persistStore(store)\n\n\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,eAAe,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SACIC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACxB,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,UAAU,QAAS,wBAAwB;AACpD,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,eAAe,QAAQ,kCAAkC;AAClE,SAASC,iBAAiB,QAAQ,sCAAsC;AAIxE,MAAMC,YAAY,GAAGL,UAAU,CAACM,OAAO;AACvC,MAAMC,cAAc,GAAGR,YAAY,CAACO,OAAO;AAC3C,MAAME,WAAW,GAAGP,SAAS,CAACK,OAAO;AACrC,MAAMG,aAAa,GAAGP,WAAW,CAACI,OAAO;AACzC,MAAMI,iBAAiB,GAAGP,eAAe,CAACG,OAAO;AACjD,MAAMK,mBAAmB,GAAGP,iBAAiB,CAACE,OAAO;AAGrD,MAAMM,WAAW,GAAGvB,eAAe,CAAC;EAChCwB,KAAK,EAAER,YAAY;EACnBS,OAAO,EAAEP,cAAc;EACvBQ,IAAI,EAAEP,WAAW;EACjBQ,MAAM,EAAEP,aAAa;EACrBQ,UAAU,EAAEP,iBAAiB;EAC7BQ,YAAY,EAAEP;AAClB,CAAC,CAAC;AAGF,MAAMQ,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACX9B;AACJ,CAAC;AAED,MAAM+B,gBAAgB,GAAG7B,cAAc,CAAC2B,aAAa,EAAEP,WAAW,CAAC;AAEnE,OAAO,MAAMU,KAAK,GAAGlC,cAAc,CAAC;EAChCkB,OAAO,EAAEe,gBAAgB;EACzBE,UAAU,EAAGC,oBAAoB,IACjCA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACjC,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACH,CAAC,CAAC;AAEJ,OAAO,MAAM6B,SAAS,GAAGpC,YAAY,CAAC+B,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}