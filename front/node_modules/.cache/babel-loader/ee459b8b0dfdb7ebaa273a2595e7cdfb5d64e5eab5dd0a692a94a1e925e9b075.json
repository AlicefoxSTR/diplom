{"ast":null,"code":"const {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\nconst initialState = {\n  tasks: [{\n    id: 1,\n    type: 'checkbox',\n    question: 'Что НЕ относится к персональным данным ?',\n    answers: [{\n      text: 'Фамилия, имя, отчество',\n      isCorrect: false\n    }, {\n      text: 'Все наши документы',\n      isCorrect: false\n    }, {\n      text: 'Банковские данные',\n      isCorrect: false\n    }, {\n      text: 'Картинка природы из Интернета',\n      isCorrect: true\n    }]\n  }, {\n    id: 2,\n    type: 'radio',\n    question: 'Что НЕ относится к персональным данным ?',\n    answers: [{\n      text: 'Фамилия, имя, отчество',\n      isCorrect: false\n    }, {\n      text: 'Все наши документы',\n      isCorrect: false\n    }, {\n      text: 'Банковские данные',\n      isCorrect: false\n    }, {\n      text: 'Картинка природы из Интернета',\n      isCorrect: true\n    }]\n  }, {\n    id: 3,\n    type: 'input',\n    question: 'Что НЕ относится к персональным данным ?',\n    answers: [{\n      text: 'Фамилия, имя, отчество',\n      isCorrect: false\n    }, {\n      text: 'Все наши документы',\n      isCorrect: false\n    }, {\n      text: 'Банковские данные',\n      isCorrect: false\n    }, {\n      text: 'Картинка природы из Интернета',\n      isCorrect: true\n    }]\n  }],\n  activeTaskId: 1\n};\nexport const TestingSlice = createSlice({\n  initialState: initialState,\n  name: 'testing',\n  reducers: {}\n});","map":{"version":3,"names":["createSlice","require","initialState","tasks","id","type","question","answers","text","isCorrect","activeTaskId","TestingSlice","name","reducers"],"sources":["/home/msheverdin/diplom2/front/src/redux/TestingSlice/TestingSlice.jsx"],"sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\")\n\n\nconst initialState = {\n    tasks: [\n        {\n            id: 1,\n            type: 'checkbox',\n            question: 'Что НЕ относится к персональным данным ?',\n            answers: [\n                {\n                    text: 'Фамилия, имя, отчество',\n                    isCorrect: false\n                },\n                {\n                    text: 'Все наши документы',\n                    isCorrect: false\n                },\n                {\n                    text: 'Банковские данные',\n                    isCorrect: false\n                },\n                {\n                    text: 'Картинка природы из Интернета',\n                    isCorrect: true\n                },\n            ]\n        },\n        {\n            id: 2,\n            type: 'radio',\n            question: 'Что НЕ относится к персональным данным ?',\n            answers: [\n                {\n                    text: 'Фамилия, имя, отчество',\n                    isCorrect: false\n                },\n                {\n                    text: 'Все наши документы',\n                    isCorrect: false\n                },\n                {\n                    text: 'Банковские данные',\n                    isCorrect: false\n                },\n                {\n                    text: 'Картинка природы из Интернета',\n                    isCorrect: true\n                },\n            ]\n        },\n        {\n            id: 3,\n            type: 'input',\n            question: 'Что НЕ относится к персональным данным ?',\n            answers: [\n                {\n                    text: 'Фамилия, имя, отчество',\n                    isCorrect: false\n                },\n                {\n                    text: 'Все наши документы',\n                    isCorrect: false\n                },\n                {\n                    text: 'Банковские данные',\n                    isCorrect: false\n                },\n                {\n                    text: 'Картинка природы из Интернета',\n                    isCorrect: true\n                },\n            ]\n        },\n    ],\n    activeTaskId: 1,\n}\n\n\nexport const TestingSlice = createSlice({\n    initialState: initialState,\n    name: 'testing',\n    reducers: {\n\n    }\n})"],"mappings":"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAGnD,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,CACH;IACIC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,UAAU;IAChBC,QAAQ,EAAE,0CAA0C;IACpDC,OAAO,EAAE,CACL;MACIC,IAAI,EAAE,wBAAwB;MAC9BC,SAAS,EAAE;IACf,CAAC,EACD;MACID,IAAI,EAAE,oBAAoB;MAC1BC,SAAS,EAAE;IACf,CAAC,EACD;MACID,IAAI,EAAE,mBAAmB;MACzBC,SAAS,EAAE;IACf,CAAC,EACD;MACID,IAAI,EAAE,+BAA+B;MACrCC,SAAS,EAAE;IACf,CAAC;EAET,CAAC,EACD;IACIL,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,0CAA0C;IACpDC,OAAO,EAAE,CACL;MACIC,IAAI,EAAE,wBAAwB;MAC9BC,SAAS,EAAE;IACf,CAAC,EACD;MACID,IAAI,EAAE,oBAAoB;MAC1BC,SAAS,EAAE;IACf,CAAC,EACD;MACID,IAAI,EAAE,mBAAmB;MACzBC,SAAS,EAAE;IACf,CAAC,EACD;MACID,IAAI,EAAE,+BAA+B;MACrCC,SAAS,EAAE;IACf,CAAC;EAET,CAAC,EACD;IACIL,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,0CAA0C;IACpDC,OAAO,EAAE,CACL;MACIC,IAAI,EAAE,wBAAwB;MAC9BC,SAAS,EAAE;IACf,CAAC,EACD;MACID,IAAI,EAAE,oBAAoB;MAC1BC,SAAS,EAAE;IACf,CAAC,EACD;MACID,IAAI,EAAE,mBAAmB;MACzBC,SAAS,EAAE;IACf,CAAC,EACD;MACID,IAAI,EAAE,+BAA+B;MACrCC,SAAS,EAAE;IACf,CAAC;EAET,CAAC,CACJ;EACDC,YAAY,EAAE;AAClB,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAGX,WAAW,CAAC;EACpCE,YAAY,EAAEA,YAAY;EAC1BU,IAAI,EAAE,SAAS;EACfC,QAAQ,EAAE,CAEV;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}