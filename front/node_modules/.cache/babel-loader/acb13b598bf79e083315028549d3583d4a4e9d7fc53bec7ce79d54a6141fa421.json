{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport { TestingSlice } from \"redux/TestingSlice/TestingSlice\";\nimport { TestsSlice } from \"redux/TestsSlice/TestsSlice\";\nimport { UserSlice } from \"redux/UserSlice/UserSlice\";\nimport { PopupsSlice } from \"redux/PopupsSlice/PopupsSlice\";\nconst TestsReducer = TestsSlice.reducer;\nconst TestingReducer = TestingSlice.reducer;\nconst UserReducer = UserSlice.reducer;\nconst PopupsReducer = PopupsSlice.reducer;\nconst rootReducer = combineReducers({\n  tests: TestsReducer,\n  testing: TestingReducer,\n  user: UserReducer,\n  popups: PopupsReducer\n});\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","storage","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","TestingSlice","TestsSlice","UserSlice","PopupsSlice","TestsReducer","reducer","TestingReducer","UserReducer","PopupsReducer","rootReducer","tests","testing","user","popups","persistConfig","key","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/home/msheverdin/diplom2/front/src/store/index.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport storage from 'redux-persist/lib/storage';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n  } from 'redux-persist';\nimport { TestingSlice } from \"redux/TestingSlice/TestingSlice\";\nimport { TestsSlice  } from \"redux/TestsSlice/TestsSlice\";     \nimport { UserSlice } from \"redux/UserSlice/UserSlice\";\nimport { PopupsSlice } from \"redux/PopupsSlice/PopupsSlice\";\n\n\n\nconst TestsReducer = TestsSlice.reducer\nconst TestingReducer = TestingSlice.reducer\nconst UserReducer = UserSlice.reducer\nconst PopupsReducer = PopupsSlice.reducer\n \n\nconst rootReducer = combineReducers({\n    tests: TestsReducer,\n    testing: TestingReducer,\n    user: UserReducer,\n    popups: PopupsReducer\n})\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  })\n\nexport const persistor = persistStore(store)\n\n\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,eAAe,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SACIC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACxB,SAASC,YAAY,QAAQ,iCAAiC;AAC9D,SAASC,UAAU,QAAS,6BAA6B;AACzD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,WAAW,QAAQ,+BAA+B;AAI3D,MAAMC,YAAY,GAAGH,UAAU,CAACI,OAAO;AACvC,MAAMC,cAAc,GAAGN,YAAY,CAACK,OAAO;AAC3C,MAAME,WAAW,GAAGL,SAAS,CAACG,OAAO;AACrC,MAAMG,aAAa,GAAGL,WAAW,CAACE,OAAO;AAGzC,MAAMI,WAAW,GAAGnB,eAAe,CAAC;EAChCoB,KAAK,EAAEN,YAAY;EACnBO,OAAO,EAAEL,cAAc;EACvBM,IAAI,EAAEL,WAAW;EACjBM,MAAM,EAAEL;AACZ,CAAC,CAAC;AAGF,MAAMM,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXxB;AACJ,CAAC;AAED,MAAMyB,gBAAgB,GAAGvB,cAAc,CAACqB,aAAa,EAAEL,WAAW,CAAC;AAEnE,OAAO,MAAMQ,KAAK,GAAG5B,cAAc,CAAC;EAChCgB,OAAO,EAAEW,gBAAgB;EACzBE,UAAU,EAAGC,oBAAoB,IACjCA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC3B,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACH,CAAC,CAAC;AAEJ,OAAO,MAAMuB,SAAS,GAAG9B,YAAY,CAACyB,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}